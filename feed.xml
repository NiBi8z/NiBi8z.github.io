<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>NiBi</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-07-27T13:33:15+00:00</updated> <author> <name>NiBi</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 NiBi </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>THM - Couch</title><link href="/posts/THM-couch/" rel="alternate" type="text/html" title="THM - Couch" /><published>2022-07-27T00:00:00+00:00</published> <updated>2022-07-27T00:00:00+00:00</updated> <id>/posts/THM-couch/</id> <content src="/posts/THM-couch/" /> <author> <name>NiBi</name> </author> <category term="Try Hack Me" /> <summary> Nmap First, we use nmap to find the open ports : ┌──(kali㉿kali)-[~/Desktop] └─$ nmap -A 10.10.232.160 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-27 08:09 EDT Nmap scan report for 10.10.232.160 Host is up (0.12s latency). Not shown: 999 closed tcp ports (conn-refused) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-ho... </summary> </entry> <entry><title>THM - Mustacchio</title><link href="/posts/THM-Mustacchio/" rel="alternate" type="text/html" title="THM - Mustacchio" /><published>2022-07-26T00:00:00+00:00</published> <updated>2022-07-26T00:00:00+00:00</updated> <id>/posts/THM-Mustacchio/</id> <content src="/posts/THM-Mustacchio/" /> <author> <name>NiBi</name> </author> <category term="Try Hack Me" /> <summary> Nmap As always, we start the enumeration with nmap : ┌──(kali㉿kali)-[~] └─$ nmap -A 10.10.93.229 Starting Nmap 7.92 ( https://nmap.org ) at 2022-07-26 10:31 EDT Nmap scan report for 10.10.93.229 Host is up (0.079s latency). Not shown: 998 filtered tcp ports (no-response) PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0) | ssh-h... </summary> </entry> <entry><title>Tic Tac Toe - AI with Minimax algorithm</title><link href="/posts/tic-tac-toe-minimax/" rel="alternate" type="text/html" title="Tic Tac Toe - AI with Minimax algorithm" /><published>2022-07-08T00:00:00+00:00</published> <updated>2022-07-23T10:45:09+00:00</updated> <id>/posts/tic-tac-toe-minimax/</id> <content src="/posts/tic-tac-toe-minimax/" /> <author> <name>NiBi</name> </author> <category term="AI" /> <summary> Introduction : I was interested in artificial intelligence. So I challenged myself to make an artificial intelligence that wins every time at tic tac toe. First of all, how to do it? I read a lot about artificial intelligence. Here, there are two types of AI particularly interesting: Reinforcement learning : basically, we let the AI learn by itself, if it wins, we reward it. (it’s very sc... </summary> </entry> <entry><title>CryptoHack - Ron was Wrong, Whit is Right</title><link href="/posts/ronwaswrong/" rel="alternate" type="text/html" title="CryptoHack - Ron was Wrong, Whit is Right" /><published>2022-06-26T00:00:00+00:00</published> <updated>2022-06-26T00:00:00+00:00</updated> <id>/posts/ronwaswrong/</id> <content src="/posts/ronwaswrong/" /> <author> <name>NiBi</name> </author> <category term="CryptoHack" /> <summary> Instructions : Here’s a bunch of RSA public keys I gathered from people on the net together with messages that they sent. As excerpt.py shows, everyone was using PKCS#1 OAEP to encrypt their own messages. It shouldn’t be possible to decrypt them, but perhaps there are issues with some of the keys? Challenge files: excerpt.py keys_and_messages.zip Resources: The recent difficulties ... </summary> </entry> <entry><title>CryptoHack - Fast Primes</title><link href="/posts/fast-prime/" rel="alternate" type="text/html" title="CryptoHack - Fast Primes" /><published>2022-06-26T00:00:00+00:00</published> <updated>2022-06-26T00:00:00+00:00</updated> <id>/posts/fast-prime/</id> <content src="/posts/fast-prime/" /> <author> <name>NiBi</name> </author> <category term="CryptoHack" /> <summary> Instructions : I need to produce millions of RSA keys quickly and the standard way just doesn’t cut it. Here’s yet another fast way to generate primes which has actually resisted years of review. Challenge files: fast_primes.py key.pem ciphertext.txt fast_primes.py #!/usr/bin/env python3 import math import random from Crypto.Cipher import PKCS1_OAEP from Crypto.PublicKey import RSA... </summary> </entry> </feed>
